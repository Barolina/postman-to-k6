const Item = require('./Item')
const postman = require('postman-collection')

function _convertCollection (item, result, allVariables) {
  if (postman.ItemGroup.isItemGroup(item)) {
    var folder = item
    if (folder.auth) { throw new Error(' TODO: folder.auth') }

    result.push('')
    result.push(`  group("${folder.name}", function() {\n`)
    result.push('    let res;')
    folder.items.each(function (folderItem, index) {
      _convertCollection(folderItem, result, allVariables)
    })
    result.push('  });\n')
  } else if (postman.Item.isItem(item)) {
    var k6Request = Item(item)

    if (k6Request.variables) {
      k6Request.variables.forEach(function (item) {
        allVariables.push(item)
      })
    }
    result.push(k6Request.result)
  } else {
    throw new Error(' TODO: Implement postCollection item')
  }
}

function Collection (collectionObject) {
  const postmanCollection = new postman.Collection(collectionObject)
  if (!postmanCollection || postmanCollection.items.count() === 0) {
    return '// No HTTP/HTTPS transactions have been recorded.'
  }

  const MAX_REDIRECTS = 4
  var result = []
  var allVariables = []

  result.push('// Auto-generated by the Load Impact converter')
  result.push('')
  result.push('import { group } from "k6";')
  result.push('import http from "k6/http";')
  result.push('')
  result.push('export let options = {')
  result.push(`  maxRedirects: ${MAX_REDIRECTS}`)
  result.push('}')
  result.push('')
  result.push('export default function() {')

  var hasRequestsAtRootLevel = false
  postmanCollection.items.each(function (item) {
    if (postman.Item.isItem(item)) {
      hasRequestsAtRootLevel = true
    }
  })

  if (hasRequestsAtRootLevel) {
    result.push('    let res;')
  }

  postmanCollection.items.each(function (item) {
    _convertCollection(item, result, allVariables)
  })

  if (allVariables.length) {
    allVariables = arrayUnique(allVariables)

    result.splice(4, 0, '')
    for (var j = allVariables.length - 1; j >= 0; j--) {
      const declaration = `let ${allVariables[j]} = "YOUR_VALUE";`
      result.splice(4, 0, declaration)
    }
    result.splice(4, 0, '')
  }

  result.push('}')

  return result.join('\n')
}

function arrayUnique (array) {
  var a = array.concat()
  for (var i = 0; i < a.length; ++i) {
    for (var j = i + 1; j < a.length; ++j) {
      if (a[i] === a[j]) { a.splice(j--, 1) }
    }
  }
  return a
}

module.exports = Collection
