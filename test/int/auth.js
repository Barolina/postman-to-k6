/* eslint-disable no-template-curly-in-string */

import test from 'ava'
import convertFile from 'convert/file'

test('noauth', t => {
  const result = convertFile('test/material/2/noauth.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";

export let options = { maxRedirects: 4 };

export default function() {
  let res;

  res = http.get("http://example.com");
}
`)
})

test('basic', t => {
  const result = convertFile('test/material/2/basic.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";

export let options = { maxRedirects: 4 };

export default function() {
  let res;

  res = http.get("http://user123:secret@example.com", {
    auth: "basic"
  });
}
`)
})

test('bearer', t => {
  const result = convertFile('test/material/2/bearer.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";

export let options = { maxRedirects: 4 };

export default function() {
  let res;

  res = http.get("http://example.com", {
    headers: {
      Authorization: "Bearer secrettoken"
    }
  });
}
`)
})

test('digest', t => {
  const result = convertFile('test/material/2/digest.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";

export let options = { maxRedirects: 4 };

export default function() {
  let res;

  res = http.get("http://user123:secret@example.com", {
    auth: "digest"
  });
}
`)
})

test('ntlm', t => {
  const result = convertFile('test/material/2/ntlm.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";

export let options = { maxRedirects: 4 };

export default function() {
  let res;

  res = http.get("http://user123:secret@example.com", {
    auth: "ntlm"
  });
}
`)
})

test('awsv4', t => {
  const result = convertFile('test/material/2/awsv4.json')
  t.is(result, `// Auto-generated by the Load Impact converter

import http from "k6/http";
import URI from "cdnjs.cloudflare.com/ajax/libs/URI.js/1.19.1/URI.min.js";
import aws4 from "./aws4.js";

export let options = { maxRedirects: 4 };

export default function() {
  let res, address, options, credential, signed;

  address = new URI("http://example.com");
  options = {
    method: "get",
    protocol: address.protocol(),
    hostname: address.hostname(),
    port: address.port(),
    path: address.path() + address.search(),
    region: "region",
    service: "service"
  };
  credential = {
    accessKeyId: "accesskey",
    secretAccessKey: "secretkey",
    sessionToken: "session"
  };
  signed = aws4.sign(options, credential);
  res = http.get(${'`http://${signed.hostname}${signed.path}`'}, {
    headers: signed.headers
  });
}
`)
})
